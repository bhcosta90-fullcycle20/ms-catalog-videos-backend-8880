# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.1/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
            - integration-queue_integration_rabbitmq
            - integration-s3_integration_s3
        depends_on:
            - mariadb
            - redis
    # laravel.worker:
    #     build:
    #         context: ./vendor/laravel/sail/runtimes/8.1
    #         dockerfile: Dockerfile
    #         args:
    #             WWWGROUP: '${WWWGROUP}'
    #     image: sail-8.1/app
    #     extra_hosts:
    #         - 'host.docker.internal:host-gateway'
    #     environment:
    #         WWWUSER: '${WWWUSER}'
    #         LARAVEL_SAIL: 1
    #         XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
    #         XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    #     entrypoint: /bin/sh -c "while [ true ]; do (php /var/www/html/artisan queue:work --stop-when-empty &); sleep 1; done"
    #     volumes:
    #         - '.:/var/www/html'
    #     networks:
    #         - sail
    #         - integration-queue_integration_rabbitmq
    #         - integration-s3_integration_s3
    #     depends_on:
    #         - laravel.test
    # laravel.horizon:
    #     build:
    #         context: ./vendor/laravel/sail/runtimes/8.1
    #         dockerfile: Dockerfile
    #         args:
    #             WWWGROUP: '${WWWGROUP}'
    #     image: sail-8.1/app
    #     extra_hosts:
    #         - 'host.docker.internal:host-gateway'
    #     environment:
    #         WWWUSER: '${WWWUSER}'
    #         LARAVEL_SAIL: 1
    #         XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
    #         XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    #     entrypoint: php /var/www/html/artisan horizon
    #     volumes:
    #         - '.:/var/www/html'
    #     networks:
    #         - sail
    #         - integration-queue_integration_rabbitmq
    #         - integration-s3_integration_s3
    #     depends_on:
    #         - laravel.test
    # laravel.cron:
    #     build:
    #         context: ./vendor/laravel/sail/runtimes/8.1
    #         dockerfile: Dockerfile
    #         args:
    #             WWWGROUP: '${WWWGROUP}'
    #     image: sail-8.1/app
    #     extra_hosts:
    #         - 'host.docker.internal:host-gateway'
    #     environment:
    #         WWWUSER: '${WWWUSER}'
    #         LARAVEL_SAIL: 1
    #         XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
    #         XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    #     entrypoint: 'php /var/www/html/artisan schedule:run'
    #     volumes:
    #         - '.:/var/www/html'
    #     networks:
    #         - sail
    #         - integration-queue_integration_rabbitmq
    #         - integration-s3_integration_s3
    #     depends_on:
    #         - laravel.test
    mariadb:
        image: 'mariadb:10'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - './vendor/data/mariadb:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - './vendor/data/redis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    memcached:
        image: 'memcached:alpine'
        ports:
            - '11220:11211'
        networks:
            - sail
networks:
    sail:
        driver: bridge
    integration-queue_integration_rabbitmq:
        external: true
    integration-s3_integration_s3:
        external: true
